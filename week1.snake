import pandas

sample_csv = pandas.read_csv('sample_sheet.csv', index_col='name')
CONDITIONS = set(sample_csv['condition'].tolist())
REPS = set(sample_csv['replicate'].tolist())

rule all:
    input:
        expand('results/fastqc/full/{condition}_{rep}_fastqc.html', condition=CONDITIONS, rep=REPS),
        expand('samples/trimmed/full/{condition}_{rep}_trimmed.fastq', condition=CONDITIONS, rep=REPS),
        'results/bowtie2_index/genome.1.bt2',
        'results/bowtie2_index/genome.2.bt2',
        'results/bowtie2_index/genome.3.bt2',
        'results/bowtie2_index/genome.4.bt2',
        'results/bowtie2_index/genome.rev.1.bt2',
        'results/bowtie2_index/genome.rev.2.bt2'

rule wget_files:
    output:
        'samples/raw/full/{condition}_{rep}.fastq.gz'
    params:
        link = lambda wildcards: sample_csv.loc[f'{wildcards.condition}_{wildcards.rep}', 'ftp_link']
    shell:
        'wget -O {output} {params.link}'

rule fastqc:
    input:
        'samples/raw/full/{condition}_{rep}.fastq.gz'
    output:
        report_html='results/fastqc/full/{condition}_{rep}_fastqc.html',
        report_zip='results/fastqc/full/{condition}_{rep}_fastqc.zip'
    params:
        outdir = 'results/fastqc/full/'
    threads: 4
    conda:
        'envs/fastqc_env.yml'
    shell:
        'fastqc {input} --outdir {params.outdir}'

rule trimmomatic:
    input:
        'samples/raw/full/{condition}_{rep}.fastq.gz'
    output:
        'samples/trimmed/full/{condition}_{rep}_trimmed.fastq'
    params:
        adapters ='results/TruSeq3-SE.fa'
    conda:
        'envs/trimmomatic_env.yml'
    shell:
        'trimmomatic SE -threads {threads} {input} {output} {params.trim_options}'

rule bowtie2_build_gencode:
    input:
        fa='results/GRCh38.primary_assembly.genome.fa.gz'
    output:
        'results/bowtie2_index/genome.1.bt2',
        'results/bowtie2_index/genome.2.bt2',
        'results/bowtie2_index/genome.3.bt2',
        'results/bowtie2_index/genome.4.bt2',
        'results/bowtie2_index/genome.rev.1.bt2',
        'results/bowtie2_index/genome.rev.2.bt2'
    params:
        prefix = 'results/bowtie2_index/genome'
    threads: 16
    conda:
        'envs/bowtie2_env.yml'
    shell:
        """
        zcat {input.fa} > {input.fa}.decompressed.fa &&
        bowtie2-build --threads {threads} {input.fa}.decompressed.fa {params.prefix} &&
        rm {input.fa}.decompressed.fa
        """
